generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  dataImage     Bytes?
  password      String?
  posts         Post[]
  comments      Comment[]
  accounts      Account[]
  sessions      Session[]
}

model Post{ 
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String 
  body        String 
  userId      String     @db.ObjectId
  comments    Comment[]
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Comment{
   id          String     @id @default(auto()) @map("_id") @db.ObjectId
   postId      String     @db.ObjectId
   name        String 
   body        String
   userEmail   String 
   user        User    @relation(fields: [userEmail], references: [email], onDelete: Cascade)
   post        Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @id @map("_id") @db.ObjectId
  expires    DateTime 

  @@unique([identifier, token])
}
